name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup-db:
    runs-on: ubuntu-latest
    outputs:
      db-host: ${{ steps.set-output.outputs.db_host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Postgres
        uses: armon/pdf-docker-action@v1
        if: false

      - name: Setup Docker DB (Postgres)
        run: |
          docker run -d --name test-postgres -e POSTGRES_USER=test -e POSTGRES_PASSWORD=test -e POSTGRES_DB=testdb -p 5433:5432 postgres:15

      - name: Wait for DB
        run: |
          for i in {1..30}; do
            docker exec test-postgres pg_isready -U test && break || sleep 1
          done

  dotnet-tests:
    needs: setup-db
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore
      - name: Run unit tests
        run: dotnet test ./DemoProductApi.Tests/DemoProductApi.Tests.csproj --logger:trx
      - name: Publish test results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: dotnet-tests
          path: '**/*.trx'

  e2e-playwright:
    needs: dotnet-tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U test" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Restore dotnet
        run: dotnet restore
      - name: Build API
        run: dotnet build -c Release
      - name: Start API
        run: |
          dotnet run --project DemoProductApi/DemoProductApi.csproj &
          sleep 5
      - name: Install Node deps (root)
        run: |
          npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run Playwright E2E smoke
        run: npm run e2e
